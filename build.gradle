buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
		//maven { url = 'https://maven.parchmentmc.org' }
        maven { url = "https://plugins.gradle.org/m2/" }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
		//classpath 'org.parchmentmc:librarian:1.+'
        classpath "gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0"
    }
}
apply plugin: 'net.minecraftforge.gradle'
//apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'idea'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "1.18.2-0.1.7"
group = 'com.ershgem.mf'
archivesBaseName = 'mysticalflames'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: "${game_version}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=mysticalflames.mixins.json"

            mods {
                mysticalflames {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=mysticalflames.mixins.json"

            mods {
                mysticalflames {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            args '--mod', 'mysticalflames', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                mysticalflames {
                    sources sourceSets.main
                    sources sourceSets.test
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = "Geckolib"
        url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
    }
}

configurations {
    shade
    implementation.extendsFrom(shade)
}

dependencies {
    minecraft "net.minecraftforge:forge:${game_version}-${forge_version}"
    implementation fg.deobf('com.github.glitchfiend:TerraBlender-forge:1.18.2-1.1.0.95')
	shade fg.deobf('software.bernie.geckolib:geckolib-1.18-forge:3.0.18')
    annotationProcessor "org.spongepowered:mixin:${mixin_processor_version}:processor"
}

mixin {
    add sourceSets.main, 'mysticalflames.mixins.refmap.json'
    config 'mysticalflames.mixins.json'

    debug.export = true
}

shadowJar {
    configurations = [project.configurations.shade]

    exclude 'software/bernie/example/**'
    exclude 'assets/geckolib3/**'
    exclude '**/*.java'
    relocate 'software.bernie.shadowed', 'software.bernie.modid.shadowed'
    relocate 'software.bernie.geckolib', 'software.bernie.modid.geckolib'
    classifier ''
    finalizedBy 'reobfShadowJar'
}

artifacts {
    archives tasks.shadowJar
}

reobf {
    shadowJar {}
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "mysticalflames",
                "Specification-Vendor"    : "mysticalflamessareus",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "mysticalflamessareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
